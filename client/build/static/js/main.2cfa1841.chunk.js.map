{"version":3,"sources":["components/Login.js","components/Main.js","App.js","index.js"],"names":["Login","props","state","username","password","handleSubmit","bind","handleChange","this","axios","post","process","withCredentials","then","res","localStorage","setItem","data","handleStatus","catch","err","setState","response","status","console","log","alert","e","target","name","value","className","onSubmit","preventDefault","type","placeholder","onChange","onClick","Component","withRouter","Main","handleLogout","removeItem","changeLoginStatus","App","isLogin","get","headers","getItem","login","connectedToDatabase","history","push","exact","path","render","to","require","config","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2cfa1841.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport './Login.css';\n\nclass Login extends Component {\n  state = {\n    username: '',\n    password: ''\n  }\n\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit() {\n    const { username, password } = this.state;\n\n    axios\n      .post(\n        `${process.env.REACT_APP_API_URL}/signin`,\n        {\n          username,\n          password\n        },\n        { withCredentials: true }\n      )\n      .then(res => {\n        localStorage.setItem('accessToken', res.data);\n        this.props.handleStatus();\n      })\n      .catch(err => {\n        this.setState({\n          username: '',\n          password: ''\n        });\n        if (err.response.status === 401) {\n          console.log(err.response.status);\n          alert('이름과 비밀번호를 정확히 입력해주세요!');\n        }\n      });\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"form-container\">\n        <form className=\"form-items\" onSubmit={e => e.preventDefault()}>\n          <div className=\"login\">Login</div>\n          <input\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"이름\"\n            value={this.state.username}\n            onChange={this.handleChange}\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"비밀번호\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n\n          <button type=\"submit\" onClick={this.handleSubmit}>로그인</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Login);\n","import React, { Component } from 'react';\nimport './Main.css';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  handleLogout() {\n    localStorage.removeItem('accessToken');\n    this.props.changeLoginStatus();\n  }\n\n  render() {\n    return (\n      <div className=\"main-container\">\n        <div className=\"session\">토큰을 정상적으로 받았습니다</div>\n        <div className=\"db\">데이터베이스 연결 상태를 확인하세요</div>\n        <button type=\"submit\" onClick={this.handleLogout}>로그아웃</button>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Login from './components/Login';\nimport Main from './components/Main';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    isLogin: false,\n    status: ''\n  }\n\n  constructor(props) {\n    super(props);\n    this.handleStatus = this.handleStatus.bind(this);\n    this.changeLoginStatus = this.changeLoginStatus.bind(this);\n  }\n\n  componentDidMount() {\n    this.handleStatus();\n  }\n\n  handleStatus() {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/status`,\n        {\n          withCredentials: true,\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('accessToken')}`\n          }\n        })\n      .then(res => {\n        const { login, connectedToDatabase } = res.data;\n        this.setState({\n          isLogin: login,\n          status: connectedToDatabase\n        }, () => {\n          this.props.history.push('/');\n        });\n      })\n      .catch(err => console.log(err));\n  }\n\n  changeLoginStatus() {\n    this.setState({\n      isLogin: false,\n      status: ''\n    }, () => {\n      this.props.history.push('/');\n    });\n  }\n\n  render() {\n    const { isLogin, status } = this.state;\n\n    return (\n      <div className=\"app\">\n        <div className=\"container\">\n          {isLogin\n            ? <div className=\"success\">로그인에 성공했습니다</div>\n            : <div className=\"status\">이름에는 김코딩,비밀번호에는 1234만 입력 가능합니다</div>\n          }\n          {isLogin\n            ? (status\n              ? (<div className=\"success\">데이터베이스 연결에 성공했습니다</div>)\n              : (<div className=\"fail\">하지만, 데이터베이스 연결이 필요합니다</div>))\n            : ''\n          }\n          <Switch>\n            <Route\n              exact\n              path='/main'\n              render={() => <Main changeLoginStatus={this.changeLoginStatus} />} />\n            <Route\n              exact\n              path='/login'\n              render={() => <Login handleStatus={this.handleStatus} />} />\n            <Route\n              path='/'\n              render={() => {\n                if (isLogin) {\n                  return <Redirect to='/main' />;\n                }\n                return <Redirect to='/login' />;\n              }}\n            />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nrequire('dotenv').config();\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}